The ``5-text_indentation`` module
==================================

Using ``text_indentation``
--------------------------

First import the function from module:
	>>> text_indentation = __import__('5-text_indentation').text_indentation

Checking for module docstring:
	>>> m = __import__('5-text_indentation').__doc__
	>>> len(m) > 1
	True

Checking for function docstring:
	>>> f = __import__('5-text_indentation').text_indentation.__doc__
	>>> len(f) > 1
	True

checking for correct output:
	>>> text_indentation("john: is a good boy. is'nt he?")
	ohn:
	<BLANKLINE>
	is a good boy.
	<BLANKLINE>
	is'nt he?
	<BLANKLINE>

checking for empty arg:
	>>> text_indentation()
	Traceback (most recent call last):
	TypeError: text_indentation() missing 1 required positional argument: 'text'

checking for empty str:
	>>> text_indentation("")

testing for int as argument:
	>>> text_indentation([1,2,3])
	Traceback (most recent call last):
	TypeError: text must be a string
	>>> text_indentation((1,2,3))
	Traceback (most recent call last):
	TypeError: text must be a string
	>>> text_indentation(True)
	Traceback (most recent call last):
	TypeError: text must be a string
	>>> text_indentation(1)
	Traceback (most recent call last):
	TypeError: text must be a string
	>>> text_indentation(None)
	Traceback (most recent call last):
	TypeError: text must be a string

Checking for too many args:
	>>> text_indentation("Hello", "Hi")
	Traceback (most recent call last):
	TypeError: text_indentation() takes 1 positional argument but 2 were given

Checking for standalone special chars:
	>>> text_indentation(" . ? : ")
	.
	<BLANKLINE>
	?
	<BLANKLINE>
	:
	<BLANKLINE>
