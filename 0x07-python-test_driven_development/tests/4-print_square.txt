The ``4-print_square`` module
======================

Using ``print_square``
-------------------

Importing the function from the module:
	>>> print_square = __import__('4-print_square').print_square

Checking for module docstring:
	>>> m = __import__('4-print_square').__doc__
	>>> len(m) > 1
	True

Checking for function docstring:
	>>> f = __import__('4-print_square').print_square.__doc__
        >>> len(f) > 1
        True

Checking for positive ints:
	 >>> print_square(4)
	 ####
	 ####
	 ####
	 ####

checking for size < 0:
	>>> print_square(-1)
	Traceback (most recent call last):
	ValueError: size must be >= 0

checking for size float and < 0:
	>>> print_square(-3.6)
	Traceback (most recent call last):
	TypeError: size must be an integer

checking for size as list:
	>>> print_square([1,2])
	Traceback (most recent call last):
	TypeError: size must be an integer

checking for emp args:
	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'

checking for boolean datatype:
	>>> print_square(True)
	Traceback (most recent call last):
	TypeError: size must be an integer

Checking for too many args
	>>> print_square(1, 2)
	Traceback (most recent call last):
	TypeError: print_square() takes 1 positional argument but 2 were given

Checking for non-number types:
	>>> print_square((1,))
	Traceback (most recent call last):
	TypeError: size must be an integer
	>>> print_square("3")
	Traceback (most recent call last):
	TypeError: size must be an integer
